diff a/R/DLM.R b/R/DLM.R	(rejected hunks)
@@ -106,7 +106,7 @@ DLM.estimate <- function(ipdata=NULL,control,config) {
     
     names(sebhat) <- names(bhat) <- control$risk_factor
      
-    res <- list(bhat=bhat, sebhat=sebhat, sigmahat=sigmahat)
+    res <- list(risk_factor=control$risk_factor, bhat=bhat, sebhat=sebhat, sigmahat=sigmahat)
   }else if(control$heterogeneity_effect=='fixed'){
     ############## (2) Linear model with fixed effects ##############
     # calculate total no. parameters p, warning if too many  
@@ -145,7 +145,9 @@ DLM.estimate <- function(ipdata=NULL,control,config) {
     row.names(uhat) <- row.names(seuhat) <- ss
     colnames(uhat) <- colnames(seuhat) <- control$risk_factor_heterogeneity
     
-    res <- list(bhat=bhat, sebhat=sebhat, sigmahat=sigmahat, uhat=uhat, seuhat=seuhat)
+    res <- list(risk_factor=control$risk_factor, risk_factor_heterogeneity=control$risk_factor_heterogeneity, 
+                bhat=bhat, sebhat=sebhat, sigmahat=sigmahat, uhat=uhat, seuhat=seuhat)
+    # res <- lapply(res, function(a) as.data.frame(a))
   }else if(control$heterogeneity_effect=='random'){  # DLMM
     ############## (3) Linear model with random site effects (DLMM)  ##### 
     # LMM
@@ -155,17 +157,22 @@ DLM.estimate <- function(ipdata=NULL,control,config) {
     
     bhat <- c(fit1$b)
     sebhat <- fit1$b.sd               # sd of fixed effect est
-    uhat <- t(sapply(fit1$ui, function(a) a))          # BLUP of random effects
-    seuhat <- t(sqrt(sapply(fit1$varui_post, diag)))   # se of BLUPs
+    uhat <- as.matrix(sapply(fit1$ui, function(a) a) )          # BLUP of random effects
+    seuhat <- as.matrix(sqrt(sapply(fit1$varui_post, diag)))   # se of BLUPs
     sigmahat <- sqrt(fit1$s2)         # se of common error
     Vhat <- fit1$V                    # variance components: Var(ui)
-    
+
     names(sebhat) <- names(bhat) <- control$risk_factor
     row.names(uhat) <- row.names(seuhat) <- control$sites
     colnames(uhat) <- colnames(seuhat) <- control$risk_factor_heterogeneity
     colnames(Vhat) <- row.names(Vhat) <- control$risk_factor_heterogeneity
-    
-    res <- list(bhat=bhat, sebhat=sebhat, sigmahat=sigmahat, uhat=uhat, seuhat=seuhat, Vhat=Vhat)
+   
+    res <- list(risk_factor=control$risk_factor, risk_factor_heterogeneity=control$risk_factor_heterogeneity, 
+                bhat=bhat, sebhat=sebhat, sigmahat=sigmahat, uhat=uhat, seuhat=seuhat, Vhat=Vhat)
+    # res <- lapply(res, function(a) as.data.frame(a))
+    # RJSONIO::fromJSON(RJSONIO::toJSON(res))
+    # jsonlite::
+    # rjson::    
   }
   
   return(res)
